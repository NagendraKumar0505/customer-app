{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/NagendraKumarChintha/Desktop/trainings/nodejs/customer-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TestBed } from \"@angular/core/testing\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule, By } from \"@angular/platform-browser\";\nimport { RouterModule } from \"@angular/router\";\nimport { HomeComponent } from \"../home/CustomerApp.HomeComponent\";\nimport { MasterPageComponent } from \"../home/CustomerApp.MasterPageComponent\";\nimport { CustRoutes } from \"../routing/CustomerApp.CustomerRouting\";\nimport { Mainroutes } from \"../routing/CustomerApp.MainRouting\";\nimport { GridComponent } from \"../Utilities/CustomerApp.GridComponent\";\nimport { BaseLogger, ConsoleLogger, DbLogger } from \"../Utilities/CustomerApp.Logger\";\nimport { UtilitiesModule } from \"../Utilities/CustomerApp.UtilitiesModule\";\nimport { CustComponent } from \"./CustomerApp.CustComponent\";\ndescribe(\"when customer clicks, add button is working\", () => {\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    TestBed.configureTestingModule({\n      imports: [BrowserModule, FormsModule, RouterModule.forRoot(Mainroutes), CommonModule, ReactiveFormsModule, RouterModule.forChild(CustRoutes), HttpClientModule, UtilitiesModule],\n      providers: [{\n        provide: BaseLogger,\n        useClass: ConsoleLogger\n      }, {\n        provide: '1',\n        useClass: DbLogger\n      }, {\n        provide: '2',\n        useClass: ConsoleLogger\n      }],\n      declarations: [CustComponent, HomeComponent, MasterPageComponent]\n    }).compileComponents();\n  })); // it('shows row count more than 1 in grid',()=>{\n  //     const fixture = TestBed.createComponent(CustComponent);\n  //     fixture.detectChanges();\n  //     const compiled = fixture.debugElement.nativeElement;\n  //     compiled.querySelector('#custCode').value='4343';\n  //     compiled.querySelector('#custCode').dispatchEvent(new Event('input'));\n  //     fixture.detectChanges();\n  //     compiled.querySelector('#custName').value='Nagendra';\n  //     compiled.querySelector('#custName').dispatchEvent(new Event('input'));\n  //     fixture.detectChanges();\n  //     compiled.querySelector('#custAmt').value='9999';\n  //     compiled.querySelector('#custAmt').dispatchEvent(new Event('input'));\n  //     fixture.detectChanges();\n  //     compiled.querySelector('#btnadd').click();\n  //     fixture.detectChanges();\n  //     fixture.whenStable().then(() => {\n  //         // const grid = fixture.debugElement.query(By.directive(GridComponent));\n  //         expect(compiled.querySelector(\"#mytable\").rows.length).toBeGreaterThan(1);\n  //       });\n  // })\n\n  it('increments the row count in grid', () => {\n    const fixture = TestBed.createComponent(CustComponent);\n    fixture.detectChanges();\n    const compiled = fixture.debugElement.nativeElement; // var iniRowCount = 2;\n\n    compiled.querySelector('#custCode').value = '4343';\n    compiled.querySelector('#custCode').dispatchEvent(new Event('input'));\n    fixture.detectChanges();\n    compiled.querySelector('#custName').value = 'Nagendra';\n    compiled.querySelector('#custName').dispatchEvent(new Event('input'));\n    fixture.detectChanges();\n    compiled.querySelector('#custAmt').value = '9999';\n    compiled.querySelector('#custAmt').dispatchEvent(new Event('input'));\n    fixture.detectChanges();\n    var iniRowCount = 0;\n    console.log(\"iniRwCount\" + iniRowCount);\n    iniRowCount = compiled.querySelector(\"#mytable\").rows.length; // fixture.whenStable().then(()=>{\n    //     console.log(\"iniRowCount\"+iniRowCount)\n    // });\n    // console.log(\"iniRowCount\"+iniRowCount)\n\n    console.log(\"iniRowCount\" + iniRowCount);\n    compiled.querySelector('#btnadd').click();\n    fixture.detectChanges();\n    fixture.whenStable().then(() => {\n      const grid = fixture.debugElement.query(By.directive(GridComponent));\n      expect(compiled.querySelector(\"#mytable\").rows.length).toBeGreaterThanOrEqual(iniRowCount + 1);\n    });\n  });\n});","map":{"version":3,"mappings":"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","names":["CommonModule","HttpClientModule","TestBed","FormsModule","ReactiveFormsModule","BrowserModule","By","RouterModule","HomeComponent","MasterPageComponent","CustRoutes","Mainroutes","GridComponent","BaseLogger","ConsoleLogger","DbLogger","UtilitiesModule","CustComponent","describe","beforeEach","configureTestingModule","imports","forRoot","forChild","providers","provide","useClass","declarations","compileComponents","it","fixture","createComponent","detectChanges","compiled","debugElement","nativeElement","querySelector","value","dispatchEvent","Event","iniRowCount","console","log","rows","length","click","whenStable","then","grid","query","directive","expect","toBeGreaterThanOrEqual"],"sourceRoot":"","sources":["C:\\Users\\NagendraKumarChintha\\Desktop\\trainings\\nodejs\\customer-app\\src\\CustomerApp\\customer\\CustomerApp.spec.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\"\r\nimport { HttpClientModule } from \"@angular/common/http\"\r\nimport { TestBed } from \"@angular/core/testing\"\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\"\r\nimport { BrowserModule, By } from \"@angular/platform-browser\"\r\nimport { RouterModule } from \"@angular/router\"\r\nimport { HomeComponent } from \"../home/CustomerApp.HomeComponent\"\r\nimport { MasterPageComponent } from \"../home/CustomerApp.MasterPageComponent\"\r\nimport { CustRoutes } from \"../routing/CustomerApp.CustomerRouting\"\r\nimport { Mainroutes } from \"../routing/CustomerApp.MainRouting\"\r\nimport { GridComponent } from \"../Utilities/CustomerApp.GridComponent\"\r\nimport { BaseLogger, ConsoleLogger, DbLogger } from \"../Utilities/CustomerApp.Logger\"\r\nimport { UtilitiesModule } from \"../Utilities/CustomerApp.UtilitiesModule\"\r\nimport { CustComponent } from \"./CustomerApp.CustComponent\"\r\n\r\ndescribe(\"when customer clicks, add button is working\",()=>{\r\n    beforeEach(async () => {\r\n        TestBed.configureTestingModule({\r\n            imports:[\r\n                BrowserModule,\r\n\r\n    FormsModule,\r\n    RouterModule.forRoot(Mainroutes),\r\n    CommonModule,    \r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(CustRoutes),\r\n    HttpClientModule,\r\n    UtilitiesModule\r\n            ],\r\n            providers:[\r\n                {\r\n                    provide : BaseLogger,\r\n                    useClass: ConsoleLogger\r\n                  },\r\n                  {\r\n                    provide:'1',\r\n                    useClass:DbLogger\r\n                  },\r\n                  {\r\n                    provide:'2',\r\n                    useClass:ConsoleLogger\r\n                  }\r\n            ],\r\n            declarations:[CustComponent,HomeComponent,\r\n                MasterPageComponent  ]\r\n        }).compileComponents();\r\n    });\r\n    // it('shows row count more than 1 in grid',()=>{\r\n    //     const fixture = TestBed.createComponent(CustComponent);\r\n    //     fixture.detectChanges();\r\n    //     const compiled = fixture.debugElement.nativeElement;\r\n    //     compiled.querySelector('#custCode').value='4343';\r\n    //     compiled.querySelector('#custCode').dispatchEvent(new Event('input'));\r\n    //     fixture.detectChanges();\r\n    //     compiled.querySelector('#custName').value='Nagendra';\r\n    //     compiled.querySelector('#custName').dispatchEvent(new Event('input'));\r\n    //     fixture.detectChanges();\r\n    //     compiled.querySelector('#custAmt').value='9999';\r\n    //     compiled.querySelector('#custAmt').dispatchEvent(new Event('input'));\r\n    //     fixture.detectChanges();\r\n\r\n    //     compiled.querySelector('#btnadd').click();\r\n    //     fixture.detectChanges();\r\n\r\n    //     fixture.whenStable().then(() => {\r\n    //         // const grid = fixture.debugElement.query(By.directive(GridComponent));\r\n          \r\n    //         expect(compiled.querySelector(\"#mytable\").rows.length).toBeGreaterThan(1);\r\n    //       });\r\n    // })\r\n    it('increments the row count in grid',()=>{\r\n        const fixture = TestBed.createComponent(CustComponent);\r\n        fixture.detectChanges();\r\n        const compiled = fixture.debugElement.nativeElement;\r\n\r\n        // var iniRowCount = 2;\r\n        compiled.querySelector('#custCode').value='4343';\r\n        compiled.querySelector('#custCode').dispatchEvent(new Event('input'));\r\n        fixture.detectChanges();\r\n        compiled.querySelector('#custName').value='Nagendra';\r\n        compiled.querySelector('#custName').dispatchEvent(new Event('input'));\r\n        fixture.detectChanges();\r\n        compiled.querySelector('#custAmt').value='9999';\r\n        compiled.querySelector('#custAmt').dispatchEvent(new Event('input'));\r\n        fixture.detectChanges();\r\n        \r\n        var iniRowCount=0;\r\n        console.log(\"iniRwCount\"+iniRowCount)\r\n        iniRowCount = compiled.querySelector(\"#mytable\").rows.length;\r\n        // fixture.whenStable().then(()=>{\r\n        //     console.log(\"iniRowCount\"+iniRowCount)\r\n        // });\r\n        // console.log(\"iniRowCount\"+iniRowCount)\r\n        console.log(\"iniRowCount\"+iniRowCount)\r\n        compiled.querySelector('#btnadd').click();\r\n        fixture.detectChanges();\r\n\r\n        fixture.whenStable().then(() => {\r\n            const grid = fixture.debugElement.query(By.directive(GridComponent));\r\n          \r\n            expect(compiled.querySelector(\"#mytable\").rows.length).toBeGreaterThanOrEqual(iniRowCount+ 1);\r\n          });\r\n    })\r\n})"]},"metadata":{},"sourceType":"module"}