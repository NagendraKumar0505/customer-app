{"ast":null,"code":"import { Customer } from './CustomerApp.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Utilities/CustomerApp.Logger\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction CustComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Customer Code format is wrong\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.hasError(\"CustomerCodeControl\", \"pattern\"));\n  }\n}\n\nfunction CustComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Customer Code is required\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.hasError(\"CustomerCodeControl\", \"required\"));\n  }\n}\n\nfunction CustComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Customer name is required\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.hasError(\"CustomerNameControl\", \"required\"));\n  }\n}\n\nfunction CustComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const cust_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cust_r4.customerCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cust_r4.customerName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cust_r4.customerAmount);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let CustComponent = /*#__PURE__*/(() => {\n  class CustComponent {\n    constructor(_logger) {\n      this.title = 'customer-app';\n      this.customerModel = new Customer();\n      this.customerModels = new Array();\n      this.logger = _logger;\n      this.logger.log('inside CustComponent');\n    }\n\n    Add() {\n      this.customerModels.push(this.customerModel);\n      this.customerModel = new Customer(); //clear text fields\n    }\n\n    hasError(controlName, validationName) {\n      return this.customerModel.formCustomerGroup.controls[controlName].hasError(validationName);\n    }\n\n  }\n\n  CustComponent.ɵfac = function CustComponent_Factory(t) {\n    return new (t || CustComponent)(i0.ɵɵdirectiveInject(i1.BaseLogger));\n  };\n\n  CustComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 27,\n    vars: 11,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"CustomerCodeControl\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"formControlName\", \"CustomerNameControl\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 3, \"ngModelOptions\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"add\", 3, \"disabled\", \"click\"], [3, \"hidden\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"hidden\"]],\n    template: function CustComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtext(1, \"\\nCustomer code: \");\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CustComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.customerModel.customerCode = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵtext(4, \"\\nCustomer name: \");\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CustComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.customerModel.customerName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵtext(7, \"\\nCustomer amount: \");\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CustComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.customerModel.customerAmount = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"click\", function CustComponent_Template_input_click_10_listener() {\n          return ctx.Add();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, CustComponent_div_12_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵtemplate(14, CustComponent_div_14_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵtemplate(16, CustComponent_div_16_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"table\")(19, \"tr\")(20, \"td\");\n        i0.ɵɵtext(21, \"Customer code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"td\");\n        i0.ɵɵtext(23, \"Customer Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"td\");\n        i0.ɵɵtext(25, \"Customer Amount\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, CustComponent_tr_26_Template, 7, 3, \"tr\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.customerModel.formCustomerGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.customerModel.customerCode);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.customerModel.customerName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(10, _c0))(\"ngModel\", ctx.customerModel.customerAmount);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.customerModel.formCustomerGroup.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerModel.formCustomerGroup.dirty);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerModel.formCustomerGroup.dirty);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerModel.formCustomerGroup.dirty);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.customerModels);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n  return CustComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}